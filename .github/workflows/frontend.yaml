name: Deploy Frontend to AWS S3 + CloudFront

on:
  push:
    branches:
        - mainnn

  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Set Environment Variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "CF_DIST_ID=${{ secrets.CLOUDFRONT_PROD_DISTRIBUTION_ID }}" >> $GITHUB_ENV
            echo "S3_PREFIX=fe-aviation-prod" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/test" ]]; then
            echo "CF_DIST_ID=${{ secrets.CLOUDFRONT_TEST_DISTRIBUTION_ID }}" >> $GITHUB_ENV
            echo "S3_PREFIX=fe-aviation-test" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/demo" ]]; then
            echo "CF_DIST_ID=${{ secrets.CLOUDFRONT_DEMO_DISTRIBUTION_ID }}" >> $GITHUB_ENV
            echo "S3_PREFIX=fe-aviation-demo" >> $GITHUB_ENV
          else
            echo "CF_DIST_ID=E35GMZ16EN8I5N" >> $GITHUB_ENV
            echo "S3_PREFIX=fe-aviation-dev" >> $GITHUB_ENV
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install games-type dependency
        working-directory: frontend/game-types/crash
        run: |
          pnpm install

      - name: Build game-types
        working-directory: frontend/game-types/crash
        run: |
          if [[ "${{ github.ref_name }}" == "cicd" ]]; then
            pnpm run build:dev
          elif [[ "${{ github.ref_name }}" == "qa" ]]; then
            pnpm run build:qa
          elif [[ "${{ github.ref_name }}" == "demo" ]]; then
            pnpm run build:demo
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            pnpm run build:prod
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
            name: game-type-artifact
            path: frontend/game-types/crash/dist/

      - name: Install games-type dependency
        working-directory: frontend/games/crash/Aviation
        run: |
          pnpm install

      - name: Build games
        working-directory: frontend/games/crash/Aviation
        run: |
          pnpm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
            name: games-build-artifact
            path: frontend/games/crash/Aviation/dist

      - name: make aviation directory
        working-directory: frontend/game-types/crash/dist/crash-game-engine/browser
        run: |
          mkdir aviation

      - name: copy the build from games to games-type
        run: |
          cp -r frontend/games/crash/Aviation/dist frontend/game-types/crash/dist/crash-game-engine/browser/aviation

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
            name: final-artifact
            path: frontend/game-types/crash/dist/crash-game-engine

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync frontend/game-types/crash/dist s3://${{ secrets.S3_BUCKET }} --delete --exact-timestamps

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CF_DIST_ID \
            --paths "/*"

      - name: âœ… Deployment Complete
        run: echo "Deployed to $S3_PREFIX (version $VERSION)!"
        
      
